#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => '/lms/HTML/EN/settings/player/audio.html',
        'modtime' => '1607695397',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $context->process('settings/header.html');
    $output .=  "\n\n	";
#line 18 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<select class=\"stdedit\" name=\"pref_powerOnResume\" id=\"pref_powerOnResume\">\n\n			";
#line 15 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { 'PauseOff-NoneOn' => 'SETUP_POWERONRESUME_PAUSEOFF_NONEON', 'PauseOff-PlayOn' => 'SETUP_POWERONRESUME_PAUSEOFF_PLAYON', 'StopOff-PlayOn' => 'SETUP_POWERONRESUME_STOPOFF_PLAYON', 'StopOff-NoneOn' => 'SETUP_POWERONRESUME_STOPOFF_NONEON', 'StopOff-ResetPlayOn' => 'SETUP_POWERONRESUME_STOPOFF_RESETPLAYON', 'StopOff-ResetOn' => 'SETUP_POWERONRESUME_STOPOFF_RESETON'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 14 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_powerOnResume', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 14 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 14 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n		</select>\n	";
        $context->include('setting', { 'title' => 'SETUP_POWERONRESUME', 'desc' => 'SETUP_POWERONRESUME_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 58 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_analogOutMode' ]]) || $stash->get(['prefs', 0, 'exists', [ 'pref_lineInLevel' ]]) || $stash->get(['prefs', 0, 'exists', [ 'pref_lineInAlwaysOn' ]])) {
    $output .=  "\n		";
#line 57 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			";
#line 37 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_analogOutMode' ]])) {
    $output .=  "\n				";
#line 36 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_analogOutMode\" id=\"pref_analogOutMode\">\n\n					";
#line 33 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1' => 'ANALOGOUTMODE_SUBOUT', '0' => 'ANALOGOUTMODE_HEADPHONE', '2' => 'ANALOGOUTMODE_ALWAYS_ON', '3' => 'ANALOGOUTMODE_ALWAYS_OFF'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 32 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_analogOutMode', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 32 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 32 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_ANALOGOUTMODE', 'desc' => 'SETUP_ANALOGOUTMODE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n			";
#line 43 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_lineInLevel' ]])) {
    $output .=  "\n				";
#line 42 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<input type=\"text\" class=\"stdedit sliderInput_0_100\" name=\"pref_lineInLevel\" id=\"lineInLevel\" value=\"";
#line 41 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'lineInLevel', 0]);
    $output .=  "\" size=\"5\">\n				";
        $context->include('settingGroup', { 'title' => 'LINE_IN_LEVEL', 'desc' => 'LINE_IN_LEVEL_DESC', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n			";
#line 56 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_lineInAlwaysOn' ]])) {
    $output .=  "\n				";
#line 55 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_lineInAlwaysOn\" id=\"lineInAlwaysOn\">\n						<option ";
#line 48 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_lineInAlwaysOn', 0])) {
    $output .=  "selected=\"selected\" ";
    }
    
    $output .=  "value=\"1\">\n							";
#line 49 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'YES';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n						</option>\n						<option ";
#line 51 "/lms/HTML/EN/settings/player/audio.html"
    if (! $stash->get(['prefs', 0, 'pref_lineInAlwaysOn', 0])) {
    $output .=  "selected=\"selected\" ";
    }
    
    $output .=  "value=\"0\">\n							";
#line 52 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'NO';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n						</option>\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'LINE_IN_ALWAYS_ON', 'desc' => 'LINE_IN_ALWAYS_ON_DESC', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n		";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 93 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_powerOffDac' ]]) || $stash->get(['prefs', 0, 'exists', [ 'pref_disableDac' ]])) {
    $output .=  "\n		";
#line 92 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			";
#line 75 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_powerOffDac' ]])) {
    $output .=  "\n				";
#line 74 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_powerOffDac\" id=\"pref_powerOffDac\">\n\n					";
#line 71 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1' => 'POWEROFFDAC_WHENOFF', '0' => 'POWEROFFDAC_ALWAYSON'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 70 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_powerOffDac', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 70 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 70 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_POWEROFFDAC', 'desc' => 'SETUP_POWEROFFDAC_DESC', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n			";
#line 90 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_disableDac' ]])) {
    $output .=  "\n				";
#line 89 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_disableDac\" id=\"pref_disableDac\">\n\n					";
#line 86 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1' => 'DISABLEDAC_WHENOFF', '0' => 'DISABLEDAC_ALWAYSON'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 85 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_disableDac', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 85 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 85 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_DISABLEDAC', 'desc' => 'SETUP_DISABLEDAC_DESC', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n		";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 148 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_transitionType' ]])) {
    $output .=  "\n		";
#line 147 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			";
#line 111 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<select class=\"stdedit\" name=\"pref_transitionType\" id=\"pref_transitionType\">\n\n				";
#line 108 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'TRANSITION_NONE', '1' => 'TRANSITION_CROSSFADE', '2' => 'TRANSITION_FADE_IN', '3' => 'TRANSITION_FADE_OUT', '4' => 'TRANSITION_FADE_IN_OUT'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n					<option ";
#line 107 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_transitionType', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 107 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 107 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</select>\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_TRANSITIONTYPE', 'desc' => 'SETUP_TRANSITIONTYPE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
#line 124 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<select class=\"stdedit\" name=\"pref_transitionSmart\" id=\"pref_pref_transitionSmart\">\n\n				";
#line 121 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'SETUP_TRANSITIONSMART_OFF', '1' => 'SETUP_TRANSITIONSMART_ON'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n					<option ";
#line 120 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_transitionSmart', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 120 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 120 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</select>\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_TRANSITIONSMART', 'desc' => 'SETUP_TRANSITIONSMART_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
#line 137 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<select class=\"stdedit\" name=\"pref_transitionSampleRestriction\" id=\"pref_transitionSampleRestriction\">\n\n				";
#line 134 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1' => 'NO', '0' => 'YES'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n					<option ";
#line 133 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_transitionSampleRestriction', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 133 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 133 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</select>\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_TRANSITIONSAMPLERESTRICTION', 'desc' => 'SETUP_TRANSITIONSAMPLERESTRICTION_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
#line 141 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<input type=\"text\" class=\"stdedit sliderInput_0_10\" name=\"pref_transitionDuration\" id=\"pref_transitionDuration\" value=\"";
#line 140 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'pref_transitionDuration', 0]);
    $output .=  "\" size=\"5\">\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_TRANSITIONDURATION', 'desc' => 'SETUP_TRANSITIONDURATION_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
#line 145 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<input type=\"text\" class=\"stdedit sliderInput_0_10\" name=\"pref_fadeInDuration\" id=\"pref_fadeInDuration\" value=\"";
#line 144 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'pref_fadeInDuration', 0]);
    $output .=  "\" size=\"5\">\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_FADEINDURATION', 'desc' => 'SETUP_FADEINDURATION_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n		";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 179 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_bass' ]]) || $stash->get(['prefs', 0, 'exists', [ 'pref_treble' ]]) || $stash->get(['prefs', 0, 'exists', [ 'pref_stereoxl' ]])) {
    $output .=  "\n		";
#line 178 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			";
#line 156 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_bass' ]])) {
    $output .=  "\n				";
#line 155 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<input type=\"text\" class=\"stdedit sliderInput_";
#line 154 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('minBass');
    $output .=  "_";
#line 154 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('maxBass');
    $output .=  "\" name=\"pref_bass\" id=\"pref_bass\" value=\"";
#line 154 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'pref_bass', 0]);
    $output .=  "\" size=\"5\">\n				";
        $context->include('settingGroup', { 'title' => 'BASS', 'desc' => '', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n			";
#line 162 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_treble' ]])) {
    $output .=  "\n				";
#line 161 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<input type=\"text\" class=\"stdedit sliderInput_";
#line 160 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('minTreble');
    $output .=  "_";
#line 160 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('maxTreble');
    $output .=  "\" name=\"pref_treble\" id=\"pref_treble\" value=\"";
#line 160 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'pref_treble', 0]);
    $output .=  "\" size=\"5\">\n				";
        $context->include('settingGroup', { 'title' => 'TREBLE', 'desc' => '', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n			";
#line 177 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_stereoxl' ]])) {
    $output .=  "\n				";
#line 176 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_stereoxl\" id=\"pref_stereoxl\">\n						";
#line 174 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'OFF', '1' => 'LOW', '2' => 'MEDIUM', '3' => 'HIGH'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n							<option ";
#line 173 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_stereoxl', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 173 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 173 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "					</select>\n				";
        $context->include('settingGroup', { 'title' => 'STEREOXL', 'desc' => '', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n		";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 302 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_digitalVolumeControl' ]])) {
    $output .=  "\n		";
#line 300 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n\n			";
#line 195 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<select class=\"stdedit\" name=\"pref_digitalVolumeControl\" id=\"pref_digitalVolumeControl\">\n\n				";
#line 192 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1' => 'SETUP_DIGITALVOLUMECONTROL_ON', '0' => 'SETUP_DIGITALVOLUMECONTROL_OFF'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n					<option ";
#line 191 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_digitalVolumeControl', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 191 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 191 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</select>\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_DIGITALVOLUMECONTROL', 'desc' => 'SETUP_DIGITALVOLUMECONTROL_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n\n			";
#line 202 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_preampVolumeControl' ]])) {
    $output .=  "\n				";
#line 201 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<input type=\"text\" class=\"stdedit sliderInput_0_63\" name=\"pref_preampVolumeControl\" id=\"pref_preampVolumeControl\" value=\"";
#line 200 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'pref_preampVolumeControl', 0]);
    $output .=  "\" size=\"15\">\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_PREAMPVOLUMECONTROL', 'desc' => 'SETUP_PREAMPVOLUMECONTROL_DESC', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n			";
#line 206 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<input type=\"text\" class=\"stdedit\" name=\"pref_mp3SilencePrelude\" id=\"pref_mp3SilencePrelude\" value=\"";
#line 205 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'pref_mp3SilencePrelude', 0]);
    $output .=  "\" size=\"15\">\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_MP3SILENCEPRELUDE', 'desc' => 'SETUP_MP3SILENCEPRELUDE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n\n			";
#line 224 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_digitalOutputEncoding' ]])) {
    $output .=  "\n\n				";
#line 222 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_digitalOutputEncoding\" id=\"pref_digitalOutputEncoding\">\n\n					";
#line 219 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'DIGITALOUTPUTENCODING_SPDIF', '1' => 'DIGITALOUTPUTENCODING_AESEBU'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 218 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_digitalOutputEncoding', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 218 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 218 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_DIGITALOUTPUTENCODING', 'desc' => 'SETUP_DIGITALOUTPUTENCODING_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
    }
    
    $output .=  "\n\n			";
#line 245 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_clockSource' ]])) {
    $output .=  "\n\n				";
#line 243 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_clockSource\" id=\"pref_clockSource\">\n\n					";
#line 240 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'CLOCKSOURCE_INTERNAL', '1' => 'CLOCKSOURCE_WORD_CLOCK', '2' => 'AUDIO_SOURCE_BALANCED_AES', '3' => 'AUDIO_SOURCE_BNC_SPDIF', '4' => 'AUDIO_SOURCE_RCA_SPDIF', '5' => 'AUDIO_SOURCE_OPTICAL_SPDIF'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 239 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_clockSource', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 239 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 239 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_CLOCKSOURCE', 'desc' => 'SETUP_CLOCKSOURCE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
    }
    
    $output .=  "\n\n			";
#line 265 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_fxloopSource' ]])) {
    $output .=  "\n\n				";
#line 263 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_fxloopSource\" id=\"pref_fxloopSource\">\n\n					";
#line 260 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'FXLOOPSOURCE_DISABLED', '1' => 'AUDIO_SOURCE_BALANCED_AES', '2' => 'AUDIO_SOURCE_BNC_SPDIF', '3' => 'AUDIO_SOURCE_RCA_SPDIF', '4' => 'AUDIO_SOURCE_OPTICAL_SPDIF'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 259 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_fxloopSource', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 259 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 259 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_FXLOOPSOURCE', 'desc' => 'SETUP_FXLOOPSOURCE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
    }
    
    $output .=  "\n\n			";
#line 282 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_fxloopClock' ]])) {
    $output .=  "\n\n				";
#line 280 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_fxloopClock\" id=\"pref_fxloopClock\">\n\n					";
#line 277 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'FXLOOPCLOCK_SYNCHRONOUS', '1' => 'FXLOOPCLOCK_ASYNCHRONOUS'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 276 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_fxloopClock', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 276 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 276 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_FXLOOPCLOCK', 'desc' => 'SETUP_FXLOOPCLOCK_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
    }
    
    $output .=  "\n\n			";
#line 298 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_polarityInversion' ]])) {
    $output .=  "\n\n				";
#line 297 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n					<select class=\"stdedit\" name=\"pref_polarityInversion\" id=\"pref_polarityInversion\">\n\n					";
#line 294 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'POLARITYINVERSION_NORMAL', '3' => 'POLARITYINVERSION_INVERTED'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n						<option ";
#line 293 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_polarityInversion', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 293 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 293 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					</select>\n				";
        $context->include('settingGroup', { 'title' => 'SETUP_POLARITYINVERSION', 'desc' => 'SETUP_POLARITYINVERSION_DESC', 'content', $output }); 
    };
    
    $output .=  "\n			";
    }
    
    $output .=  "\n\n		";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n\n	";
    }
    
    $output .=  "\n\n	";
#line 317 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_wordClockOutput' ]])) {
    $output .=  "\n		";
#line 316 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<select class=\"stdedit\" name=\"pref_wordClockOutput\" id=\"pref_wordClockOutput\">\n\n			";
#line 313 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'WORDCLOCKOUTPUT_DISABLED', '1' => 'WORDCLOCKOUTPUT_ENABLED'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 312 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_wordClockOutput', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 312 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 312 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n			</select>\n		";
        $context->include('setting', { 'title' => 'SETUP_WORDCLOCKOUTPUT', 'desc' => 'SETUP_WORDCLOCKOUTPUT_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 332 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_rolloffSlow' ]])) {
    $output .=  "\n		";
#line 331 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<select class=\"stdedit\" name=\"pref_rolloffSlow\" id=\"pref_rolloffSlow\">\n\n			";
#line 328 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'ROLLOFFSLOW_DISABLED', '1' => 'ROLLOFFSLOW_ENABLED'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 327 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_rolloffSlow', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 327 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 327 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n			</select>\n		";
        $context->include('setting', { 'title' => 'SETUP_ROLLOFFSLOW', 'desc' => 'SETUP_ROLLOFFSLOW_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 373 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		";
#line 339 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get('allowNoLimit')) {
    $output .=  "\n			";
#line 336 "/lms/HTML/EN/settings/player/audio.html"
    
    # CAPTURE
    $stash->set('desc', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_MAXBITRATE_DESC';
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n		";
    }
    else {
    $output .=  "\n			";
#line 338 "/lms/HTML/EN/settings/player/audio.html"
    
    # CAPTURE
    $stash->set('desc', do {
        my $output = '';
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_MP3BITRATE_DESC';
        
        &$_tt_filter($output);
    };
    
        $output;
    });
    
    $output .=  "\n		";
    }
    
    $output .=  "\n\n		";
#line 358 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<select class=\"stdedit\" name=\"pref_maxBitrate\" id=\"pref_maxBitrate\" ";
#line 342 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  ! $stash->get('lamefound') && 'disabled';
    $output .=  ">\n\n				";
#line 346 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get('allowNoLimit')) {
    $output .=  "\n					<option ";
#line 345 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_maxBitrate', 0]) eq '0') {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"0\">";
#line 345 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'NO_LIMIT';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>\n				";
    }
    
    $output .=  "\n				";
#line 349 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ '64', '96', '128', '160', '192', '224', '256', '320' ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n					<option ";
#line 348 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_maxBitrate', 0]) eq $stash->get('option')) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 348 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('option');
    $output .=  "\">";
#line 348 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('option');
    $output .=  " ";
#line 348 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'KBPS';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</select>\n				<br/>\n				";
#line 357 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get('lamefound')) {
    $output .=  "\n					";
#line 354 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_LAME_FOUND';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n				";
    }
    else {
    $output .=  "\n					";
#line 356 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_LAME_NOT_FOUND';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n				";
    }
    
    $output .=  "\n		";
        $context->include('settingGroup', { 'title' => 'SETUP_MAXBITRATE', 'content', $output }); 
    };
    
    $output .=  "\n\n		";
#line 371 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<select class=\"stdedit\" name=\"pref_lameQuality\" id=\"pref_lameQuality\" ";
#line 361 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  ! $stash->get('lamefound') && 'disabled';
    $output .=  ">\n\n			";
#line 368 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = [ 0..9 ];
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 364 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_lameQuality', 0]) eq $stash->get('option')) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 364 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('option');
    $output .=  "\">\n					";
#line 365 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get('option');
    $output .=  " ";
#line 366 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['loop', 0, 'first', 0])) {
    $output .=  " (";
#line 365 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'LAME0';
        
        &$_tt_filter($output);
    };
    
    $output .=  ")\n					";
    }
    elsif ($stash->get(['loop', 0, 'last', 0])) {
    $output .=  " (";
#line 366 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'LAME9';
        
        &$_tt_filter($output);
    };
    
    $output .=  ")";
    }
    
    $output .=  "\n				</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n			</select>\n		";
        $context->include('settingGroup', { 'title' => 'SETUP_LAMEQUALITY', 'desc' => 'SETUP_LAMEQUALITY_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 396 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_replayGainMode' ]])) {
    $output .=  "\n		";
#line 395 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			";
#line 390 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<select class=\"stdedit\" name=\"pref_replayGainMode\" id=\"pref_replayGainMode\">\n\n				";
#line 387 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'REPLAYGAIN_DISABLED', '1' => 'REPLAYGAIN_TRACK_GAIN', '2' => 'REPLAYGAIN_ALBUM_GAIN', '3' => 'REPLAYGAIN_SMART_GAIN'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n					<option ";
#line 386 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_replayGainMode', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 386 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 386 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n				</select>\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_REPLAYGAINMODE', 'desc' => 'SETUP_REPLAYGAINMODE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n			";
#line 394 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n				<input type=\"text\" class=\"stdedit sliderInput_-20_20_0.1\" name=\"pref_remoteReplayGain\" id=\"pref_remoteReplayGain\" value=\"";
#line 393 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['prefs', 0, 'pref_remoteReplayGain', 0]);
    $output .=  "\" size=\"5\">\n			";
        $context->include('settingGroup', { 'title' => 'SETUP_REPLAYGAIN_REMOTE', 'desc' => 'SETUP_REPLAYGAIN_REMOTE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n		";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 411 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_mp3StreamingMethod' ]])) {
    $output .=  "\n		";
#line 410 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<select class=\"stdedit\" name=\"pref_mp3StreamingMethod\" id=\"pref_mp3StreamingMethod\">\n\n			";
#line 407 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'MP3_STREAMING_DIRECT', '1' => 'MP3_STREAMING_PROXIED'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 406 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_mp3StreamingMethod', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 406 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 406 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n			</select>\n		";
        $context->include('setting', { 'title' => 'SETUP_MP3STREAMINGMETHOD', 'desc' => 'SETUP_MP3STREAMINGMETHOD_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n	";
#line 427 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'exists', [ 'pref_outputChannels' ]])) {
    $output .=  "\n		";
#line 426 "/lms/HTML/EN/settings/player/audio.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<select class=\"stdedit\" name=\"pref_outputChannels\" id=\"pref_outputChannels\">\n\n			";
#line 423 "/lms/HTML/EN/settings/player/audio.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '0' => 'OUTPUT_CHANNELS_NORMAL', '1' => 'OUTPUT_CHANNELS_LEFT', '2' => 'OUTPUT_CHANNELS_RIGHT'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n				<option ";
#line 422 "/lms/HTML/EN/settings/player/audio.html"
    if ($stash->get(['prefs', 0, 'pref_outputChannels', 0]) eq $stash->get(['option', 0, 'key', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 422 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 422 "/lms/HTML/EN/settings/player/audio.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n			</select>\n		";
        $context->include('setting', { 'title' => 'SETUP_OUTPUT_CHANNELS', 'desc' => 'SETUP_OUTPUT_CHANNELS_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  "\n\n";
#line 429 "/lms/HTML/EN/settings/player/audio.html"
    $output .=  $context->process('settings/footer.html');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
